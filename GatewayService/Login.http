
@username = admin0
@password = Admin123.
@email = admin0@gmail.com
@role = Admin
@token = {{postLogin.response.body.jwtToken.result}}
@refreshToken = {{postLogin.response.body.refreshToken}}
@baseUrl=http://localhost:5151

### Register a new user
POST {{baseUrl}}/auth/register HTTP/1.1
Content-Type: application/json

{
  "username": "{{username}}",
  "email": "{{email}}",
  "password": "{{password}}",
  "role": "{{role}}"
}

### Login user
# @name postLogin
POST {{baseUrl}}/auth/login HTTP/1.1
Content-Type: application/json

{
  "username": "{{username}}",
  "password": "{{password}}"
}
###

### Refresh JWT token
POST {{baseUrl}}/auth/refresh HTTP/1.1
Content-Type: application/json

{
  "refreshToken": "{{refreshToken}}"
}

### Logout user
POST {{baseUrl}}/auth/logout HTTP/1.1
Content-Type: application/json

{
  "refreshToken": "{{refreshToken}}"
}

### Check authentication status
GET {{baseUrl}}/auth/auth HTTP/1.1
Authorization: Bearer {{token}}

### Get user profile
GET {{baseUrl}}/auth/profile HTTP/1.1
Authorization: Bearer {{token}}

### Update user profile
PUT {{baseUrl}}/auth/update-profile HTTP/1.1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "username": "efekan",
  "email": "updatedemail@example.com",
  "address": "New Address"
}

### Get admin information
GET {{baseUrl}}/auth/admin HTTP/1.1
Authorization: Bearer {{token}}

### Fetch all products
GET {{baseUrl}}/Product
Authorization: Bearer {{token}}
Accept: application/json

### Create a new product
POST {{baseUrl}}/Product
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "New Product",
  "price": 19.99,
  "stock": 100
}

###
@productId=
### Fetch a product by ID
GET {{baseUrl}}/Product/{{productId}}
Authorization: Bearer {{token}}
Accept: application/json

### Update a product by ID
PUT {{baseUrl}}/Product/{{productId}}
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Product",
  "price": 2.99,
  "stock": 1500
}

### Delete a product by ID
DELETE {{baseUrl}}/Product/{{productId}}
Authorization: Bearer {{token}}
Accept: application/json

### Fetch all orders
# @name getOrder
GET {{baseUrl}}/Order
Authorization: Bearer {{token}}
Accept: application/json

### Assign orderId and userId from the response
@orderId={{getOrder.response.body.id}}
@userId={{getOrder.response.body.userId}}

### Create a new order
POST {{baseUrl}}/Order
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": "{{userId}}",
  "orderItems": [
    {
      "productId": "product-uuid-1",
      "quantity": 2,
      "price": 19.99
    },
    {
      "productId": "product-uuid-2",
      "quantity": 1,
      "price": 49.99
    }
  ]
}

### Fetch an order by ID
GET {{baseUrl}}/Order/{{orderId}}
Authorization: Bearer {{token}}
Accept: application/json

### Update an order by ID
PUT {{baseUrl}}/Order/{{orderId}}
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": "updated-user-uuid",
  "orderItems": [
    {
      "productId": "updated-product-uuid-1",
      "quantity": 3,
      "price": 29.99
    }
  ]
}

### Delete an order by ID
DELETE {{baseUrl}}/Order/{{orderId}}
Authorization: Bearer {{token}}
Accept: application/json
